<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <condition/>
        <conditional>false</conditional>
        <entered_time>1970-01-01 00:00:00</entered_time>
        <max_drift/>
        <name>Populate Endpoint Table</name>
        <offset/>
        <offset_type>0</offset_type>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2025-06-26 22:22:43</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>on_demand</run_type>
        <script><![CDATA[(function execute() {
    var rSecured = new sn_ws.RESTMessageV2('DigiCert_ONE_TLM_API', 'Endpoint Discovery - Secured');
    var responseSecured = rSecured.execute();
    var responseBodySecured = responseSecured.getBody();
    var parsed = JSON.parse(responseBodySecured);
    gs.info("SECURED RESPONSE: " + responseBodySecured);

    var items = parsed.items;
    if (!items || items.length === 0) {
        gs.info("No secured endpoints returned.");
        return;
    }

    for (var i = 0; i < items.length; i++) {
        var item = items[i];

        var existing = new GlideRecord('x_1586600_test_sno_endpoint_table');
        existing.addQuery('application', item.application || '');
        existing.addQuery('host_name', item.host_name || '');
        existing.addQuery('common_name', item.common_name || '');
        existing.addQuery('valid_to', item.valid_to || '');
        existing.addQuery('endpoint_location', item.location || '');
        existing.addQuery('automation_status', item.automation_status || '');
        existing.addQuery('certificate_id', item.certificate_id || '');
        existing.query();

        if (existing.next()) {
            gs.info("Duplicate found. Skipping insert for: " + item.common_name);
            continue; 
        }

        var gr = new GlideRecord('x_1586600_test_sno_endpoint_table');
        gr.initialize();

        // Set standard fields
        gr.setValue('application', item.application || '');
        gr.setValue('host_name', item.host_name || '');
        gr.setValue('common_name', item.common_name || '');
        gr.setValue('valid_to', item.valid_to || '');
        gr.setValue('endpoint_location', item.location || '');
        gr.setValue('automation_status', item.automation_status || '');
        gr.setValue('certificate_id', item.certificate_id || '');

        var insertedSysId = gr.insert();
        if (insertedSysId) {
            gs.info("Inserted new record for: " + item.common_name);
        } else {
            gs.error("Insert failed for: " + item.common_name);
        }
    }
})();]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-06-26 22:23:42</sys_created_on>
        <sys_id>8e9d577a9352ea50c7667a5efaba10dc</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Populate Endpoint Table</sys_name>
        <sys_package display_value="Test Snow Automation " source="x_1586600_test_sno">e53c840993d66250c7667a5efaba1019</sys_package>
        <sys_policy/>
        <sys_scope display_value="Test Snow Automation ">e53c840993d66250c7667a5efaba1019</sys_scope>
        <sys_update_name>sysauto_script_8e9d577a9352ea50c7667a5efaba10dc</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-07 20:28:11</sys_updated_on>
        <time_zone/>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
</record_update>
